{"version":3,"sources":["ff/index.js","app.js","service-worker.js","index.js"],"names":["ff","Fanfou","consumerKey","consumerSecret","apiDomain","oauthDomain","hooks","baseString","str","replace","fullList","App","state","loged","user","message","currentPage","pageCount","prevStatusCount","statusCount","done","erroredPages","goAuth","a","getRequestToken","res","localStorage","setItem","oauthTokenSecret","window","location","oauthToken","href","fetchStatuses","pages","length","console","log","async","eachLimit","page","cb","get","count","format","then","list","prevCount","forEach","status","push","setState","filter","p","catch","error","concat","sort","b","rawid","startAnalyze","statusesCount","statuses_count","Math","ceil","Array","from","v","i","downloadAsNofan","txt","map","name","screen_name","text","item","type","id","_text","photo","photoTag","originurl","time","moment","Date","created_at","local","join","down","search","this","parsed","queryString","parse","oauth_token","getItem","getAccessToken","removeItem","origin","pathname","className","style","width","maxWidth","margin","fontSize","alt","src","profile_image_url","imageRendering","m","key","String","value","max","start","end","duration","disabled","onClick","position","right","bottom","reload","textAlign","fontWeight","marginLeft","target","rel","marginTop","marginBottom","React","Component","Boolean","hostname","match","navigator","serviceWorker","ready","unregister","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d1bb822c.chunk.js","sourcesContent":["import Fanfou from 'fanfou-sdk-browser';\n\nexport const consumerKey = '7008b986b162eb6ed2db8f50f26bc03e';\nexport const consumerSecret = '0caea751b828756dca59a8ea7330384b';\n\nexport const ff = new Fanfou({\n\tconsumerKey,\n\tconsumerSecret,\n\tapiDomain: 'cors.fanfou.pro',\n\toauthDomain: 'cors.fanfou.pro',\n\thooks: {\n\t\tbaseString: str => str\n\t\t\t.replace('%2F%2Fcors.fanfou.pro%2Foauth', 'http%3A%2F%2Ffanfou.com%2Foauth')\n\t\t\t.replace('%2F%2Fcors.fanfou.pro', 'http%3A%2F%2Fapi.fanfou.com')\n\t}\n});\n","import React from 'react';\nimport down from 'js-file-download';\nimport moment from 'moment';\nimport ReactCountup from 'react-countup';\nimport queryString from 'query-string';\nimport async from 'async';\nimport {ff} from './ff';\nimport 'nes.css/css/nes.css';\nimport './app.css';\n\nconst fullList = [];\n\nclass App extends React.Component {\n\tstate = {\n\t\tloged: false,\n\t\tuser: null,\n\t\tmessage: [],\n\t\tcurrentPage: 0,\n\t\tpageCount: 0,\n\t\tprevStatusCount: 0,\n\t\tstatusCount: 0,\n\t\tdone: false,\n\t\terroredPages: []\n\t}\n\n\tasync componentDidMount() {\n\t\tconst {location} = window;\n\t\tif (location && location.search) {\n\t\t\tthis.setState({loged: true});\n\t\t\tconst parsed = queryString.parse(location.search);\n\t\t\tconst {oauth_token: oauthToken} = parsed;\n\t\t\tconst oauthTokenSecret = localStorage.getItem('requestTokenSecret');\n\t\t\tif (oauthTokenSecret) {\n\t\t\t\tconst res = await ff.getAccessToken({oauthToken, oauthTokenSecret});\n\t\t\t\tlocalStorage.setItem('oauthToken', res.oauthToken);\n\t\t\t\tlocalStorage.setItem('oauthTokenSecret', res.oauthTokenSecret);\n\t\t\t\tlocalStorage.removeItem('requestTokenSecret');\n\t\t\t\twindow.location.replace(window.location.origin + window.location.pathname);\n\t\t\t}\n\t\t} else {\n\t\t\tconst oauthToken = localStorage.getItem('oauthToken');\n\t\t\tconst oauthTokenSecret = localStorage.getItem('oauthTokenSecret');\n\n\t\t\tif (oauthToken && oauthTokenSecret) {\n\t\t\t\tthis.setState({loged: true});\n\t\t\t\tff.oauthToken = oauthToken;\n\t\t\t\tff.oauthTokenSecret = oauthTokenSecret;\n\t\t\t\tconst user = await ff.get('/users/show');\n\t\t\t\tthis.setState({user});\n\t\t\t}\n\t\t}\n\t}\n\n\tgoAuth = async () => {\n\t\tconst res = await ff.getRequestToken();\n\t\tlocalStorage.setItem('requestTokenSecret', res.oauthTokenSecret);\n\t\twindow.location.replace(`https://fanfou.com/oauth/authorize?oauth_token=${res.oauthToken}&oauth_callback=${window.location.href}`);\n\t}\n\n\tfetchStatuses = pages => {\n\t\tconst {done, erroredPages} = this.state;\n\n\t\tif (done) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (erroredPages.length > 0) {\n\t\t\tconsole.log('Errored pages:', erroredPages);\n\t\t\tpages = erroredPages;\n\t\t}\n\n\t\tasync.eachLimit(pages, 6, (page, cb) => {\n\t\t\tff.get('/statuses/user_timeline', {page, count: 60, format: 'html'})\n\t\t\t\t.then(list => {\n\t\t\t\t\tconst prevCount = fullList.length;\n\t\t\t\t\tlist.forEach(status => {\n\t\t\t\t\t\tfullList.push(status);\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState(state => ({\n\t\t\t\t\t\tcurrentPage: state.currentPage + 1,\n\t\t\t\t\t\tprevStatusCount: prevCount,\n\t\t\t\t\t\tstatusCount: fullList.length,\n\t\t\t\t\t\terroredPages: state.erroredPages.filter(p => p !== page)\n\t\t\t\t\t}), cb);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tthis.setState(state => ({\n\t\t\t\t\t\terroredPages: state.erroredPages.concat(page)\n\t\t\t\t\t}), cb);\n\t\t\t\t});\n\t\t}, error => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\n\t\t\tfullList.sort((a, b) => b.rawid - a.rawid);\n\n\t\t\tthis.setState({done: erroredPages.length === 0}, () => {\n\t\t\t\tthis.fetchStatuses(erroredPages);\n\t\t\t});\n\t\t});\n\t}\n\n\tstartAnalyze = () => {\n\t\tconst {user} = this.state;\n\t\tconst {statuses_count: statusesCount} = user;\n\t\tconst pageCount = Math.ceil(statusesCount / 60);\n\n\t\tthis.setState(state => ({\n\t\t\tmessage: state.message.concat([\n\t\t\t\t`你有 ${pageCount} 页预计 ${statusesCount} 条消息待导出，`,\n\t\t\t\t'开始获取消息..'\n\t\t\t]),\n\t\t\tpageCount\n\t\t}));\n\n\t\tconst pages = Array.from({length: pageCount}, (v, i) => i + 1);\n\n\t\tthis.fetchStatuses(pages);\n\t}\n\n\tdownloadAsNofan = () => {\n\t\tconst parsedData = fullList.map(status => {\n\t\t\tconst name = `[${status.user.screen_name}]`;\n\t\t\tlet text = '';\n\n\t\t\tstatus.txt.forEach(item => {\n\t\t\t\tswitch (item.type) {\n\t\t\t\t\tcase 'at':\n\t\t\t\t\t\ttext += `${item.text}:${item.id}`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\ttext += item.text;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'tag':\n\t\t\t\t\t\ttext += item._text;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttext += item._text;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (status.photo) {\n\t\t\t\tconst photoTag = `图:${status.photo.originurl}`;\n\t\t\t\tif (text.length > 0) {\n\t\t\t\t\ttext += ` ${photoTag}`;\n\t\t\t\t} else {\n\t\t\t\t\ttext += photoTag;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst time = moment(new Date(status.created_at))\n\t\t\t\t.local()\n\t\t\t\t.format('YYYY-MM-DD HH:mm:ss');\n\n\t\t\tconst line = `${name} ${text} ${time}`;\n\t\t\treturn line;\n\t\t});\n\t\tconst txt = parsedData.join('\\n');\n\t\tdown(txt, 'backup.txt');\n\t}\n\n\trender() {\n\t\tconst {user, loged, message, currentPage, pageCount, prevStatusCount, statusCount, done, erroredPages} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"nes-container with-title is-centered\" style={{width: '90vw', maxWidth: 800, margin: '40px auto 20px auto'}}>\n\t\t\t\t\t<p className=\"title\" style={{fontSize: 24, margin: '-3rem auto 1rem'}}>饭否消息备份工具</p>\n\n\t\t\t\t\t{user ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t你好，<img className=\"nes-avatar is-small\" alt=\"avatar\" src={user.profile_image_url} style={{imageRendering: 'pixelated'}}/> {user.name}。\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t{message.length > 0 ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{message.map((m, i) => <p key={String(i)}>{m}</p>)}\n\t\t\t\t\t\t\t\t\t<p><progress className=\"nes-progress is-pattern\" value={currentPage} max={pageCount}/></p>\n\t\t\t\t\t\t\t\t\t<p>实际已获取 <ReactCountup start={prevStatusCount} end={statusCount} duration={done ? 1 : 5}/> 条消息。</p>\n\t\t\t\t\t\t\t\t\t{done && erroredPages.length === 0 ? <p>获取完毕。</p> : null}\n\t\t\t\t\t\t\t\t\t{done && erroredPages.length > 0 ? <p>有 {erroredPages.length} 页消息获取失败。</p> : null}\n\t\t\t\t\t\t\t\t\t<p><button disabled={!done} type=\"button\" className={`nes-btn ${done ? 'is-success' : 'is-disabled'}`} onClick={this.downloadAsNofan}>导出</button></p>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p className=\"nes-pointer\" onClick={this.startAnalyze}>{'> 点击这里开始备份 <'}</p>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"nes-btn is-error\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\tright: -4,\n\t\t\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('oauthToken');\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('oauthTokenSecret');\n\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t退出\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tloged ? (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t正在登录..\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"nes-btn is-primary\" onClick={this.goAuth}>登录</button>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<p style={{textAlign: 'center'}}>\n\t\t\t\t\t<span style={{fontWeight: 700}}>{'<'}</span>\n\t\t\t\t\t<span style={{fontWeight: 700, marginLeft: 2}}>{'>'}</span>\n\t\t\t\t\t{' with '}\n\t\t\t\t\t<a href=\"https://fanfou.com/lito\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<i className=\"nes-icon is-small heart nes-pointer\" style={{marginTop: -4, marginBottom: -4}}/>\n\t\t\t\t\t</a>\n\t\t\t\t\t{' on '}\n\t\t\t\t\t<a href=\"https://github.com/LitoMore/fanfou-export\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<i className=\"nes-icon github is-small\" style={{marginTop: -4, marginBottom: -4}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', async () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tawait navigator.serviceWorker.ready;\n\t\t\t\tconsole.log(\n\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nasync function registerValidSW(swUrl, config) {\n\ttry {\n\t\tconst registration = await navigator.serviceWorker.register(swUrl);\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} catch (error) {\n\t\tconsole.error('Error during service worker registration:', error);\n\t}\n}\n\nasync function checkValidServiceWorker(swUrl, config) {\n\ttry {\n\t\t// Check if the service worker can be found. If it can't reload the page.\n\t\tconst response = await fetch(swUrl, {\n\t\t\theaders: {'Service-Worker': 'script'}\n\t\t});\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n        (contentType !== null && !contentType.includes('javascript'))\n\t\t) {\n\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\tconst registration = await navigator.serviceWorker.ready;\n\t\t\tawait registration.unregister();\n\t\t\twindow.location.reload();\n\t\t} else {\n\t\t\t// Service worker found. Proceed as normal.\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t} catch {\n\t\tconsole.log(\n\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t);\n\t}\n}\n\nexport async function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tconst registration = await navigator.serviceWorker.ready;\n\t\tregistration.unregister();\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './service-worker';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}