{"version":3,"sources":["ff/index.js","utils/parser.js","app.js","service-worker.js","index.js"],"names":["ff","Fanfou","consumerKey","consumerSecret","apiDomain","oauthDomain","hooks","baseString","str","replace","saveFile","text","filename","blob","Blob","type","FileSaver","saveAs","toTxt","fullList","txt","map","status","name","user","screen_name","forEach","item","id","_text","photo","photoTag","originurl","length","time","moment","Date","created_at","local","format","join","toCsv","parsedData","ID","消息内容","图片","时间","delimiter","output","Papa","unparse","header","toLowerCase","toTsv","toJson","JSON","stringify","toMarkdown","query","source_url","source_name","erroredPages","dataTypes","USER_TIMELINE","FAVORITES","exportTypes","TXT","CSV","TSV","Markdown","App","state","loged","message","currentPage","pageCount","prevStatusCount","statusCount","done","exportType","dataType","goAuth","a","getRequestToken","res","localStorage","setItem","oauthTokenSecret","window","location","oauthToken","href","getErroredPages","fetchStatuses","pages","Array","from","v","i","timelineUri","console","log","async","eachLimit","page","cb","get","count","then","list","prevCount","push","filter","p","setState","catch","error","sort","b","rawid","startAnalyze","statusesCount","statuses_count","favourites_count","Math","ceil","concat","Object","values","key","style","marginRight","checked","value","className","onChange","onChangeExportType","e","currentTarget","onChangeDataType","doExport","search","this","parsed","queryString","parse","oauth_token","getItem","getAccessToken","removeItem","origin","pathname","width","maxWidth","margin","fontSize","alt","src","profile_image_url","imageRendering","d","m","String","max","start","end","duration","disabled","onClick","position","left","bottom","reload","right","textAlign","fontWeight","marginLeft","target","rel","marginTop","marginBottom","React","Component","Boolean","hostname","match","navigator","serviceWorker","ready","unregister","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d8236824.chunk.js","sourcesContent":["import Fanfou from 'fanfou-sdk-browser';\n\nexport const consumerKey = '7008b986b162eb6ed2db8f50f26bc03e';\nexport const consumerSecret = '0caea751b828756dca59a8ea7330384b';\n\nexport const ff = new Fanfou({\n\tconsumerKey,\n\tconsumerSecret,\n\tapiDomain: 'cors.fanfou.pro',\n\toauthDomain: 'cors.fanfou.pro',\n\thooks: {\n\t\tbaseString: str => str\n\t\t\t.replace('%2F%2Fcors.fanfou.pro%2Foauth', 'http%3A%2F%2Ffanfou.com%2Foauth')\n\t\t\t.replace('%2F%2Fcors.fanfou.pro', 'http%3A%2F%2Fapi.fanfou.com')\n\t}\n});\n","import moment from 'moment';\nimport Papa from 'papaparse';\nimport FileSaver from 'file-saver';\n\nconst saveFile = (text, filename) => {\n\tconst blob = new Blob([text], {type: 'text/plain;charset=utf-8'});\n\tFileSaver.saveAs(blob, filename);\n};\n\nexport const toTxt = fullList => {\n\tconst parsedData = fullList.map(status => {\n\t\tconst name = `[${status.user.screen_name}]`;\n\t\tlet text = '';\n\n\t\tstatus.txt.forEach(item => {\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'at':\n\t\t\t\t\ttext += `${item.text}:${item.id}`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'link':\n\t\t\t\t\ttext += item.text;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tag':\n\t\t\t\t\ttext += item._text;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttext += item._text;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tif (status.photo) {\n\t\t\tconst photoTag = `图:${status.photo.originurl}`;\n\t\t\tif (text.length > 0) {\n\t\t\t\ttext += ` ${photoTag}`;\n\t\t\t} else {\n\t\t\t\ttext += photoTag;\n\t\t\t}\n\t\t}\n\n\t\tconst time = moment(new Date(status.created_at)).local().format('YYYY-MM-DD HH:mm:ss');\n\t\tconst line = `${name} ${text} ${time}`;\n\n\t\treturn line;\n\t});\n\tconst txt = parsedData.join('\\n');\n\tsaveFile(txt, 'backup.txt');\n};\n\nexport const toCsv = (fullList, type = 'CSV') => {\n\tconst parsedData = fullList.map(status => {\n\t\tconst name = status.user.screen_name;\n\t\tconst photo = status.photo ? status.photo.originurl : '';\n\t\tconst time = moment(new Date(status.created_at)).local().format('YYYY-MM-DD HH:mm:ss');\n\t\tlet text = '';\n\n\t\tstatus.txt.forEach(item => {\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'at':\n\t\t\t\t\ttext += `${item.text}:${item.id}`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'link':\n\t\t\t\t\ttext += item.text;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tag':\n\t\t\t\t\ttext += item._text;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttext += item._text;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tconst record = {ID: name, 消息内容: text, 图片: photo, 时间: time};\n\n\t\treturn record;\n\t});\n\n\tlet delimiter = ',';\n\tif (type === 'TSV') {\n\t\tdelimiter = '\\t';\n\t}\n\n\tconst output = Papa.unparse(parsedData, {delimiter, header: true});\n\tsaveFile(output, 'backup.' + type.toLowerCase());\n};\n\nexport const toTsv = fullList => {\n\ttoCsv(fullList, 'TSV');\n};\n\nexport const toJson = fullList => {\n\tconst parsedData = fullList.map(status => {\n\t\tdelete status.txt;\n\t\tdelete status.user;\n\t\treturn status;\n\t});\n\tconst output = JSON.stringify(parsedData, null, 2);\n\tsaveFile(output, 'backup.json');\n};\n\nexport const toMarkdown = fullList => {\n\tconst parsedData = fullList.map(status => {\n\t\tconst photo = status.photo ? status.photo.originurl : '';\n\t\tconst time = moment(new Date(status.created_at)).local().format('YYYY-MM-DD HH:mm:ss');\n\t\tlet text = '';\n\n\t\tstatus.txt.forEach(item => {\n\t\t\tswitch (item.type) {\n\t\t\t\tcase 'at':\n\t\t\t\t\ttext += `<a href=\"https://fanfou.com/${item.id}\">${item.text}</a>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'link':\n\t\t\t\t\ttext += `<a href=\"${item.text}\">${item.text}</a>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tag':\n\t\t\t\t\ttext += `<a href=\"https://fanfou.com/q/${item.query}\">${item._text.replace(/\\n/g, ' ')}</a>`;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttext += item._text.replace(/\\n/g, ' ');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\tconst block = `| <div>${text}</div>${photo ? `<div align=\"right\"><a href=\"${photo}\"><img width=\"100px\" src=\"${photo}\"/></a></div>` : ''} <div align=\"right\">${time} 通过 ${status.source_url ? `<a href=\"${status.source_url}\">${status.source_name}</a>` : status.source_name}</div> |`;\n\n\t\treturn block;\n\t});\n\n\tconst output = '| 饭否消息备份 |\\n| :-- |\\n' + parsedData.join('\\n');\n\tsaveFile(output, 'backup.md');\n};\n","import React from 'react';\nimport ReactCountup from 'react-countup';\nimport queryString from 'query-string';\nimport async from 'async';\nimport {ff} from './ff';\nimport {toTxt, toCsv, toTsv, toJson, toMarkdown} from './utils/parser';\nimport 'nes.css/css/nes.css';\nimport './app.css';\n\nconst fullList = [];\nlet erroredPages = [];\n\nconst dataTypes = {\n\tUSER_TIMELINE: '消息',\n\tFAVORITES: '收藏'\n};\n\nconst exportTypes = {\n\tTXT: 'TXT',\n\tCSV: 'CSV',\n\tTSV: 'TSV',\n\tJSON: 'JSON',\n\tMarkdown: 'Markdown'\n};\n\nclass App extends React.Component {\n\tstate = {\n\t\tloged: false,\n\t\tuser: null,\n\t\tmessage: [],\n\t\tcurrentPage: 0,\n\t\tpageCount: 0,\n\t\tprevStatusCount: 0,\n\t\tstatusCount: 0,\n\t\tdone: false,\n\t\texportType: 'TXT',\n\t\tdataType: '消息'\n\t}\n\n\tasync componentDidMount() {\n\t\tconst {location} = window;\n\t\tif (location && location.search) {\n\t\t\tthis.setState({loged: true});\n\t\t\tconst parsed = queryString.parse(location.search);\n\t\t\tconst {oauth_token: oauthToken} = parsed;\n\t\t\tconst oauthTokenSecret = localStorage.getItem('requestTokenSecret');\n\t\t\tif (oauthTokenSecret) {\n\t\t\t\tconst res = await ff.getAccessToken({oauthToken, oauthTokenSecret});\n\t\t\t\tlocalStorage.setItem('oauthToken', res.oauthToken);\n\t\t\t\tlocalStorage.setItem('oauthTokenSecret', res.oauthTokenSecret);\n\t\t\t\tlocalStorage.removeItem('requestTokenSecret');\n\t\t\t\twindow.location.replace(window.location.origin + window.location.pathname);\n\t\t\t}\n\t\t} else {\n\t\t\tconst oauthToken = localStorage.getItem('oauthToken');\n\t\t\tconst oauthTokenSecret = localStorage.getItem('oauthTokenSecret');\n\n\t\t\tif (oauthToken && oauthTokenSecret) {\n\t\t\t\tthis.setState({loged: true});\n\t\t\t\tff.oauthToken = oauthToken;\n\t\t\t\tff.oauthTokenSecret = oauthTokenSecret;\n\t\t\t\tconst user = await ff.get('/users/show');\n\t\t\t\tthis.setState({user});\n\t\t\t}\n\t\t}\n\t}\n\n\tgoAuth = async () => {\n\t\tconst res = await ff.getRequestToken();\n\t\tlocalStorage.setItem('requestTokenSecret', res.oauthTokenSecret);\n\t\twindow.location.replace(`https://fanfou.com/oauth/authorize?oauth_token=${res.oauthToken}&oauth_callback=${window.location.href}`);\n\t}\n\n\tgetErroredPages = () => {\n\t\treturn erroredPages;\n\t}\n\n\tfetchStatuses = () => {\n\t\tconst {done, pageCount, dataType} = this.state;\n\t\tconst {USER_TIMELINE, FAVORITES} = dataTypes;\n\n\t\tif (done) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet pages = Array.from({length: pageCount}, (v, i) => i + 1);\n\t\tlet timelineUri = '';\n\n\t\tif (erroredPages.length > 0) {\n\t\t\tpages = erroredPages;\n\t\t\tconsole.log('Retry pages', erroredPages);\n\t\t}\n\n\t\tswitch (dataType) {\n\t\t\tcase USER_TIMELINE:\n\t\t\t\ttimelineUri = '/statuses/user_timeline';\n\t\t\t\tbreak;\n\t\t\tcase FAVORITES:\n\t\t\t\ttimelineUri = '/favorites';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tasync.eachLimit(pages, 6, (page, cb) => {\n\t\t\tff.get(timelineUri, {page, count: 60, format: 'html'})\n\t\t\t\t.then(list => {\n\t\t\t\t\tconst prevCount = fullList.length;\n\t\t\t\t\tlist.forEach(status => {\n\t\t\t\t\t\tfullList.push(status);\n\t\t\t\t\t});\n\t\t\t\t\terroredPages = this.getErroredPages().filter(p => p !== page);\n\t\t\t\t\tthis.setState(state => ({\n\t\t\t\t\t\tcurrentPage: state.currentPage + 1,\n\t\t\t\t\t\tprevStatusCount: prevCount,\n\t\t\t\t\t\tstatusCount: fullList.length\n\t\t\t\t\t}), cb);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.error(`Page ${page} errored`, error);\n\t\t\t\t\terroredPages.push(page);\n\t\t\t\t\tcb();\n\t\t\t\t});\n\t\t}, error => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\n\t\t\tfullList.sort((a, b) => b.rawid - a.rawid);\n\n\t\t\tthis.setState({done: this.getErroredPages().length === 0}, () => {\n\t\t\t\tthis.fetchStatuses();\n\t\t\t});\n\t\t});\n\t}\n\n\tstartAnalyze = () => {\n\t\tconst {user, dataType} = this.state;\n\t\tconst {USER_TIMELINE, FAVORITES} = dataTypes;\n\t\tlet statusesCount = 0;\n\n\t\tswitch (dataType) {\n\t\t\tcase USER_TIMELINE:\n\t\t\t\tstatusesCount = user.statuses_count;\n\t\t\t\tbreak;\n\t\t\tcase FAVORITES:\n\t\t\t\tstatusesCount = user.favourites_count;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tconst pageCount = Math.ceil(statusesCount / 60);\n\n\t\tthis.setState(state => ({\n\t\t\tmessage: state.message.concat([\n\t\t\t\t`你有 ${pageCount} 页预计 ${statusesCount} 条${dataType}待导出，`,\n\t\t\t\t`开始获取${dataType}..`\n\t\t\t]),\n\t\t\tpageCount\n\t\t}), this.fetchStatuses);\n\t}\n\n\texportTypes = () => {\n\t\tconst {exportType} = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>选择导出格式：</p>\n\t\t\t\t<p>\n\t\t\t\t\t{Object.values(exportTypes).map(type => (\n\t\t\t\t\t\t<label key={type} style={{marginRight: 5}}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tchecked={exportType === type}\n\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tclassName=\"nes-radio\"\n\t\t\t\t\t\t\t\tname=\"export-type\"\n\t\t\t\t\t\t\t\tonChange={this.onChangeExportType}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{type}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t))}\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t}\n\n\tonChangeExportType = e => {\n\t\tconst {value: exportType} = e.currentTarget;\n\t\tthis.setState({exportType});\n\t}\n\n\tonChangeDataType = e => {\n\t\tif (this.state.message.length === 0) {\n\t\t\tconst {value: dataType} = e.currentTarget;\n\t\t\tthis.setState({dataType});\n\t\t}\n\t}\n\n\tdoExport = () => {\n\t\tconst {exportType} = this.state;\n\t\tconst {TXT, CSV, TSV, JSON, Markdown} = exportTypes;\n\n\t\tswitch (exportType) {\n\t\t\tcase TXT:\n\t\t\t\ttoTxt(fullList);\n\t\t\t\tbreak;\n\t\t\tcase CSV:\n\t\t\t\ttoCsv(fullList);\n\t\t\t\tbreak;\n\t\t\tcase TSV:\n\t\t\t\ttoTsv(fullList);\n\t\t\t\tbreak;\n\t\t\tcase JSON:\n\t\t\t\ttoJson(fullList);\n\t\t\t\tbreak;\n\t\t\tcase Markdown:\n\t\t\t\ttoMarkdown(fullList);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {user, loged, dataType, message, currentPage, pageCount, prevStatusCount, statusCount, done} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"nes-container with-title is-centered\" style={{width: '90vw', maxWidth: 800, margin: '40px auto 20px auto'}}>\n\t\t\t\t\t<p className=\"title\" style={{fontSize: 24, margin: '-3rem auto 1rem'}}>饭否消息备份工具</p>\n\n\t\t\t\t\t{user ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t你好，<img className=\"nes-avatar is-small\" alt=\"avatar\" src={user.profile_image_url} style={{imageRendering: 'pixelated'}}/> {user.name}。\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t选择你要备份的内容：\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{Object.values(dataTypes).map(d => (\n\t\t\t\t\t\t\t\t\t<label key={d} style={{marginRight: 5}}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tchecked={dataType === d}\n\t\t\t\t\t\t\t\t\t\t\tvalue={d}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"nes-radio\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"data-type\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeDataType}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<span>{d}</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t{message.length > 0 ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{message.map((m, i) => <p key={String(i)}>{m}</p>)}\n\t\t\t\t\t\t\t\t\t<p><progress className=\"nes-progress is-pattern\" value={currentPage} max={pageCount}/></p>\n\t\t\t\t\t\t\t\t\t<p>实际已获取 <ReactCountup start={prevStatusCount} end={statusCount} duration={done ? 1 : 3}/> 条{dataType}。</p>\n\t\t\t\t\t\t\t\t\t{done && <p>获取完毕。</p>}\n\t\t\t\t\t\t\t\t\t{done && this.exportTypes()}\n\t\t\t\t\t\t\t\t\t<p><button disabled={!done} type=\"button\" className={`nes-btn ${done ? 'is-success' : 'is-disabled'}`} onClick={this.doExport}>导出</button></p>\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"nes-btn\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\t\t\tleft: -4,\n\t\t\t\t\t\t\t\t\t\t\tbottom: -4\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{done ? '返回' : '停止'}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p className=\"nes-pointer\" onClick={this.startAnalyze}>{'> 点击这里开始备份 <'}</p>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"nes-btn is-error\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\tright: -4,\n\t\t\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('oauthToken');\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('oauthTokenSecret');\n\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t退出\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tloged ? (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t正在登录..\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"nes-btn is-primary\" onClick={this.goAuth}>登录</button>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<p style={{textAlign: 'center'}}>\n\t\t\t\t\t<span style={{fontWeight: 700}}>{'<'}</span>\n\t\t\t\t\t<span style={{fontWeight: 700, marginLeft: 2}}>{'>'}</span>\n\t\t\t\t\t{' with '}\n\t\t\t\t\t<a href=\"https://fanfou.com/lito\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<i className=\"nes-icon is-small heart nes-pointer\" style={{marginTop: -4, marginBottom: -4}}/>\n\t\t\t\t\t</a>\n\t\t\t\t\t{' on '}\n\t\t\t\t\t<a href=\"https://github.com/LitoMore/fanfou-export\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<i className=\"nes-icon github is-small\" style={{marginTop: -4, marginBottom: -4}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', async () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tawait navigator.serviceWorker.ready;\n\t\t\t\tconsole.log(\n\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nasync function registerValidSW(swUrl, config) {\n\ttry {\n\t\tconst registration = await navigator.serviceWorker.register(swUrl);\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} catch (error) {\n\t\tconsole.error('Error during service worker registration:', error);\n\t}\n}\n\nasync function checkValidServiceWorker(swUrl, config) {\n\ttry {\n\t\t// Check if the service worker can be found. If it can't reload the page.\n\t\tconst response = await fetch(swUrl, {\n\t\t\theaders: {'Service-Worker': 'script'}\n\t\t});\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n        (contentType !== null && !contentType.includes('javascript'))\n\t\t) {\n\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\tconst registration = await navigator.serviceWorker.ready;\n\t\t\tawait registration.unregister();\n\t\t\twindow.location.reload();\n\t\t} else {\n\t\t\t// Service worker found. Proceed as normal.\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t} catch {\n\t\tconsole.log(\n\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t);\n\t}\n}\n\nexport async function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tconst registration = await navigator.serviceWorker.ready;\n\t\tregistration.unregister();\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './service-worker';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}